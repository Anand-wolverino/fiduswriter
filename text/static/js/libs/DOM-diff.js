/**
 * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

(function(){var e,t,n;(function(r){function d(e,t){return h.call(e,t)}function v(e,t){var n,r,i,s,o,u,a,f,c,h,p=t&&t.split("/"),d=l.map,v=d&&d["*"]||{};if(e&&e.charAt(0)===".")if(t){p=p.slice(0,p.length-1),e=p.concat(e.split("/"));for(f=0;f<e.length;f+=1){h=e[f];if(h===".")e.splice(f,1),f-=1;else if(h===".."){if(f===1&&(e[2]===".."||e[0]===".."))break;f>0&&(e.splice(f-1,2),f-=2)}}e=e.join("/")}else e.indexOf("./")===0&&(e=e.substring(2));if((p||v)&&d){n=e.split("/");for(f=n.length;f>0;f-=1){r=n.slice(0,f).join("/");if(p)for(c=p.length;c>0;c-=1){i=d[p.slice(0,c).join("/")];if(i){i=i[r];if(i){s=i,o=f;break}}}if(s)break;!u&&v&&v[r]&&(u=v[r],a=f)}!s&&u&&(s=u,o=a),s&&(n.splice(0,o,s),e=n.join("/"))}return e}function m(e,t){return function(){return s.apply(r,p.call(arguments,0).concat([e,t]))}}function g(e){return function(t){return v(t,e)}}function y(e){return function(t){a[e]=t}}function b(e){if(d(f,e)){var t=f[e];delete f[e],c[e]=!0,i.apply(r,t)}if(!d(a,e)&&!d(c,e))throw new Error("No "+e);return a[e]}function w(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function E(e){return function(){return l&&l.config&&l.config[e]||{}}}var i,s,o,u,a={},f={},l={},c={},h=Object.prototype.hasOwnProperty,p=[].slice;o=function(e,t){var n,r=w(e),i=r[0];return e=r[1],i&&(i=v(i,t),n=b(i)),i?n&&n.normalize?e=n.normalize(e,g(t)):e=v(e,t):(e=v(e,t),r=w(e),i=r[0],e=r[1],i&&(n=b(i))),{f:i?i+"!"+e:e,n:e,pr:i,p:n}},u={require:function(e){return m(e)},exports:function(e){var t=a[e];return typeof t!="undefined"?t:a[e]={}},module:function(e){return{id:e,uri:"",exports:a[e],config:E(e)}}},i=function(e,t,n,i){var s,l,h,p,v,g=[],w;i=i||e;if(typeof n=="function"){t=!t.length&&n.length?["require","exports","module"]:t;for(v=0;v<t.length;v+=1){p=o(t[v],i),l=p.f;if(l==="require")g[v]=u.require(e);else if(l==="exports")g[v]=u.exports(e),w=!0;else if(l==="module")s=g[v]=u.module(e);else if(d(a,l)||d(f,l)||d(c,l))g[v]=b(l);else{if(!p.p)throw new Error(e+" missing "+l);p.p.load(p.n,m(i,!0),y(l),{}),g[v]=a[l]}}h=n.apply(a[e],g);if(e)if(s&&s.exports!==r&&s.exports!==a[e])a[e]=s.exports;else if(h!==r||!w)a[e]=h}else e&&(a[e]=n)},e=t=s=function(e,t,n,a,f){return typeof e=="string"?u[e]?u[e](t):b(o(e,t).f):(e.splice||(l=e,t.splice?(e=t,t=n,n=null):e=r),t=t||function(){},typeof n=="function"&&(n=a,a=f),a?i(r,e,t,n):setTimeout(function(){i(r,e,t,n)},4),s)},s.config=function(e){return l=e,l.deps&&s(l.deps,l.callback),s},e._defined=a,n=function(e,t,n){t.splice||(n=t,t=[]),!d(a,e)&&!d(f,e)&&(f[e]=[e,t,n])},n.amd={jQuery:!0}})(),n("almond",function(){}),n("Utils",[],function(){var e={makeArray:function(e,t){var n=function(e){e.slice();for(var t=0,r=e.length;t<r;t++)e[t]instanceof Array&&(e[t]=n(e[t]))};t instanceof Array&&(t=n(t));var r=function(){return t};return(new Array(e)).join(".").split(".").map(r)},renderArray:function(e){return rendered=[],e.forEach(function(e){rendered.push(e.join(" "))}),rendered.join("\n")},toHTML:function(e){var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML},grow:function(t,n){return t=t.slice(),n instanceof Array||(n=[n]),n.forEach(function(e){t.push(e)}),t},getGapInformation:function(e,t,n){var r=function(e){return function(){return e}},i=this.makeArray(e.childNodes.length,!0),s=this.makeArray(t.childNodes.length,!0),o=0;return n.forEach(function(e){var t,n;for(t=e.old,n=t+e.length;t<n;t++)i[t]=o;for(t=e["new"],n=t+e.length;t<n;t++)s[t]=o;o++}),{gaps1:i,gaps2:s}},createChild:function(e){var t=document.createElement("div");return t.innerHTML=e,t.childNodes[0]},getFromRoute:function(e,t){var n=e;while(t.length>0)n=n.childNodes[t.splice(0,1)[0]];return n}};return e}),n("SubsetMapping",[],function(){var e=function(t,n){this.old=t,this["new"]=n};return e.prototype={contains:function(t){return t.length<this.length?t["new"]>=this["new"]&&t["new"]<this["new"]+this.length:!1},toString:function t(){return this.length+" element subset, first mapping: old "+this.old+" â†’ new "+this["new"]}},e}),n("roughlyEqual",[],function(){var e=function t(e,n,r){if(!e||!n)return!1;if(e.nodeType!==n.nodeType)return!1;if(e.nodeType===3)return e.data===n.data;if(e.nodeName!==n.nodeName)return!1;if(e.childNodes.length!==n.childNodes.length)return!1;var i=!0;for(var s=e.childNodes.length-1;s>=0;s--)r?i=i&&e.childNodes[s].nodeName===n.childNodes[s].nodeName:i=i&&t(e.childNodes[s],n.childNodes[s],!0);return i};return e}),n("markSubTrees",["SubsetMapping","roughlyEqual","Utils"],function(e,t,n){var r=function(n,r,i,s){var o=0,u=[],a=n.length,f=r.length,l=[],c,h,p;for(c=0;c<a+1;c++)l[c]=[];for(h=0;h<a;h++)for(p=0;p<f;p++)!i[h]&&!s[p]&&t(n[h],r[p])?(l[h+1][p+1]=l[h][p]?l[h][p]+1:1,l[h+1][p+1]>o&&(o=l[h+1][p+1],u=[h+1,p+1])):l[h+1][p+1]=0;if(o===0)return!1;var d=[u[0]-o,u[1]-o],v=new e(d[0],d[1]);return v.length=o,v},i=function(t,i){t=t.cloneNode(!0),i=i.cloneNode(!0);var s=t.childNodes,o=i.childNodes,u=n.makeArray(s.length,!1),a=n.makeArray(o.length,!1),f=[],l=!0,c;while(l){l=r(s,o,u,a);if(l){f.push(l);for(c=0;c<l.length;c++)u[l.old+c]=!0;for(c=0;c<l.length;c++)a[l.new+c]=!0}}return f};return i}),n("DiffTracker",[],function(){var e=function(){this.diffInformation=[]};return e.prototype={last:!1,track:function(e){this.diffInformation.push(e),this.last=e},reset:function(){this.diffInformation=[]},toString:function(){return this.diffInformation}},e}),n("findAttrDiff",[],function(){var e=function(t,n,r,i){if(t.nodeType===3)return[];var s=Array.prototype.slice,o=function(e,t){return e.name>t.name},u=s.call(t.attributes).sort(o),a=s.call(n.attributes).sort(o),f=function(e,t){for(var n=0,r=t.length;n<r;n++)if(t[n].name===e.name)return n;return-1},l,c=[];return u.forEach(function(e){var t=f(e,a);if(t===-1){l={action:"removed attribute",route:r,attribute:{name:e.name,value:e.nodeValue}},i.track(l),c.push(l);return}var n=a.splice(t,1)[0];e.nodeValue!==n.nodeValue&&(l={action:"modified attribute",route:r,attribute:{name:e.name,oldValue:e.nodeValue,newValue:n.nodeValue}},i.track(l),c.push(l))}),a.forEach(function(e){l={action:"added attribute",route:r,attribute:{name:e.name,value:e.nodeValue}},i.track(l),c.push(l)}),c};return e}),n("getFirstDiff",["markSubTrees","Utils"],function(e,t){var n=function(r,i,s,o){console.log(r,i),o=o||[];if(r.nodeType===3&&i.nodeType===3)return r.data!==i.data?{action:"replace",oldValue:r.data,newValue:i.data,route:[0]}:!1;var u=s.gaps1,a=u.length,f=s.gaps2,l=u.length,c,h=a<l?a:l,p=0,d,v=function(e){return e!==!0},m=u.filter(v),g=m.length,y=f.filter(v),b=y.length,w=g<b?m:y;for(c=0,h=w.length;c<h;c++)if(m[c]!=y[c]){var d=m[c];return{action:"move",route:o,group:d}}var E,S,x,T;for(c=0,h=a<l?a:l;c<h;c++){E=u[c],S=f[c];if(E===!0){if(S===!0){x=r.childNodes[c],T=i.childNodes[c];if(x.nodeType===3&&T.nodeType===3)return{action:"replace",oldValue:x.data,newValue:T.data,route:[0]};if(x.nodeType===3&&T.nodeType!==3)return{action:"text to node",oldValue:x.data,newValue:t.toHTML(T),route:o};if(x.nodeType!==3&&T.nodeType===3)return{action:"node to text",oldValue:t.toHTML(x),newValue:T.data,route:o};var N=e(x,T),s=t.getGapInformation(x,T,N),C=n(x,T,s,o);return C.route=[c].concat(C.route),C}return console.log("node removed at "+c),{action:"remove",nodeNumber:c,route:[c]}}if(S===!0)return console.log("node inserted at "+c),{action:"insert",nodeNumber:c,route:[c]}}return!1};return n}),n("resolveOuterDiff",[],function(){var e=function(e,t){var n=e.cloneNode(!0);return t.forEach(function(e){var t=e.action,r=e.attribute;t==="removed attribute"?n.removeAttribute(r.name):t==="modified attribute"?n.setAttribute(r.name,r.newValue):t==="added attribute"&&n.setAttribute(r.name,r.value)}),n};return e}),n("resolveDiff",["markSubTrees","getFirstDiff","Utils"],function(e,t,n){var r=function(e,t,r,i,s){s=s||{track:function(){},last:!1};var o=t.cloneNode(!0),u=e.route,a=typeof e.baseNodeNumber=="number"?o.childNodes[e.baseNodeNumber]:o;refbase=typeof e.baseNodeNumber=="number"?r.childNodes[e.baseNodeNumber]:r;if(e.action==="replace"){console.log("replacing...",u,t),s.track({action:"text modification",route:u.slice(),oldData:e.oldValue,newData:e.newValue});var f=n.getFromRoute(a,u);console.log(f),f.data=e.newValue}else if(e.action==="node to text")s.track({action:"node to text",route:u.slice(),oldData:e.oldValue,newData:e.newValue}),a.innerHTML=e.newValue;else if(e.action==="text to node")s.track({action:"text to node",route:u.slice(),oldData:e.oldValue,newData:e.newValue}),a.innerHTML=e.newValue;else if(e.action==="remove"){var l=a.childNodes[e.nodeNumber];a.removeChild(l),s.track({action:"remove element",route:n.grow(u,e.baseNodeNumber?[e.baseNodeNumber,e.nodeNumber]:e.nodeNumber)})}else if(e.action==="insert"){var c=e.nodeNumber+1,h=refbase.childNodes[e.nodeNumber].cloneNode(!0);if(c>=a.childNodes.length)s.track({action:"append element",route:n.grow(u,e.baseNodeNumber?[e.baseNodeNumber,e.nodeNumber]:e.nodeNumber),element:n.toHTML(h)}),a.appendChild(h);else{var p=a.childNodes[e.nodeNumber],e={action:"insert element",route:n.grow(u,e.baseNodeNumber?[e.baseNodeNumber,e.nodeNumber]:e.nodeNumber),element:n.toHTML(h)};s.track(e),console.log(e),a.insertBefore(h,p)}}else if(e.action==="modified"){var d=a.childNodes[e.nodeNumber],h=refbase.childNodes[e.nodeNumber];if(e.unknown)s.track({action:"inner modification",oldData:a.innerHTML,newData:refbase.innerHTML,nodeNumber:u.slice(),route:e.route.slice()});else{if(!(d.nodeType===3&h.nodeType===3))throw console.log(d),console.log(h),s.track({action:"unknown modification",oldNode:d,newNode:h,route:n.grow(u,e.nodeNumber)}),new Error("modified is unhandled between non-text nodes at the moment");s.track({action:"text modification",route:n.grow(u,e.nodeNumber),oldData:d.data,newData:h.data}),d.data=h.data}}else if(e.action==="move"){var v=i[e.group],m=v.old,g=v["new"],l,p;s.track({action:"move elements",route:u.slice(),from:m,to:g,length:v.length});if(m>g)for(var y=0;y<v.length;y++)l=o.childNodes[m+y],p=o.childNodes[g+y],o.insertBefore(l,p);else for(var y=v.length-1;y>=0;y--)l=o.childNodes[m+y],p=o.childNodes[g+1+y],o.insertBefore(l,p)}return o};return r}),n("applyDiff",["Utils"],function(e){var t=function(t,n){var r=t.action,i=t.attribute;if(r==="removed attribute")return n.removeAttribute(i.name);if(r==="modified attribute")return n.setAttribute(i.name,i.newValue);if(r==="added attribute")return n.setAttribute(i.name,i.value);var s=t.element;if(r==="remove element")return n.parentNode.removeChild(n);if(r==="append element")return n.parentNode.appendChild(e.createChild(s));if(r==="insert element"){var o=n.nextSibling;return o.parentNode.insertBefore(e.createChild(s),o)}if(r==="move elements"){var u=t.from,a=t.to,f=t.length,l,c;if(u>a)for(var h=0;h<f;h++)l=n.childNodes[u+h],c=n.childNodes[a+h],n.insertBefore(l,c);else for(var h=f-1;h>=0;h--)l=n.childNodes[u+h],c=n.childNodes[a+1+h],n.insertBefore(l,c);return}if(r==="text modification")return n.data=t.newData;if(r==="text to node")return n.innerHTML=t.newData;if(r==="node to text")return n.innerHTML=t.newData;throw new Error(r+" unsupported")},n=function(e,n){var r=e.route.slice();node=n;try{while(r.length>0)node=node.childNodes[r.splice(0,1)[0]]}catch(i){throw console.error("Error caused by ["+e.action+"]",e),i}t(e,node)},r=function(e,t){e.forEach(function(e){n(e,t)})};return{applyOperationToNode:t,applyOperation:n,applyDiff:r}}),n("DOMdiff",["Utils","markSubTrees","DiffTracker","findAttrDiff","getFirstDiff","resolveOuterDiff","resolveDiff","applyDiff"],function(e,t,n,r,i,s,o,u){var a=!0,f=10,l=new n,c=function h(n,u,c){if(a&&l.diffInformation.length>f)throw new Error("diff cap reached");c||(c=[],l.reset());var p=r(n,u,c,l);n=s(n,p);var d=t(n,u);if(d.length===0){if(n.childNodes.length>0||u.childNodes.length>0){var v={action:"modified",nodeNumber:"unknown",route:c,unknown:!0};o(v,n,u,d,l)}return}var m=d[0],g=m.old===0&&m["new"]===0,y=m.length===n.childNodes.length;if(d.length===1&&g&&y){for(var b=0,w=n.childNodes.length;b<w;b++)h(n.childNodes[b],u.childNodes[b],e.grow(c,b));return}var E=e.getGapInformation(n,u,d),v=i(n,u,E);if(v===!1)throw new Error("more than 1 mapped subtree ("+d.length+") found, but no diff could be found...");v.route=c.concat(v.route),n=o(v,n,u,d,l),h(n,u,c)};return{findDiff:c,applyDiff:u,diffTracker:l}}),t(["DOMdiff","markSubTrees","applyDiff"],function(e,t,n){var r={};r.diff=function(n,r){console.log(n),console.log(r);var i=t(n,r);return e.findDiff(n,r),e.diffTracker.diffInformation},r.patch=function(e,t,r){console.log(e),n.applyDiff(t,e),r&&r()},window.domDiff=r}),n("compile-domdiff",function(){})})();